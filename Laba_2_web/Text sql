cur.execute("""
CREATE TABLE IF NOT EXISTS day (
    id_day INTEGER PRIMARY KEY,
    name_day TEXT NOT NULL UNIQUE
);
""")

cur.execute("""
    CREATE TABLE IF NOT EXISTS specialization (
        id_specialization INTEGER PRIMARY KEY,
        name_specialization TEXT NOT NULL UNIQUE
    )
""")

cur.execute("""
    CREATE TABLE IF NOT EXISTS doctor (
        id_doctor INTEGER PRIMARY KEY,
        id_specialization INTEGER NOT NULL,
        first_name TEXT NOT NULL,
        last_name TEXT NOT NULL,
        surname TEXT NOT NULL,
        FOREIGN KEY (id_specialization)
            REFERENCES specialization (id_specialization)
              ON DELETE CASCADE
              ON UPDATE NO ACTION
    );
""")

cur.execute("""
    CREATE TABLE IF NOT EXISTS work_day (
    id_work_day INTEGER PRIMARY KEY,
    id_doctor INTEGER NOT NULL,
    id_day INTEGER NOT NULL,
    FOREIGN KEY (id_doctor)
       REFERENCES doctor (id_doctor)
          ON DELETE CASCADE
          ON UPDATE NO ACTION,
    FOREIGN KEY (id_day)
       REFERENCES day (id_day)
          ON DELETE CASCADE
          ON UPDATE NO ACTION
    )
""")

cur.execute("""
    CREATE TABLE IF NOT EXISTS timetable (
    id_timetable INTEGER PRIMARY KEY,
    id_work_day INTEGER NOT NULL,
    beginning_of_work TEXT NOT NULL,
    end_of_work TEXT NOT NULL,
    work_date TEXT NOT NULL,
    FOREIGN KEY (id_work_day)
       REFERENCES work_day (id_work_day)
          ON DELETE CASCADE
          ON UPDATE NO ACTION
    )
""")

cur.execute("""
    CREATE TABLE IF NOT EXISTS dog_owner (
        id_dog_owner INTEGER PRIMARY KEY,
        first_name TEXT NOT NULL,
        last_name TEXT NOT NULL,
        surname TEXT NOT NULL,
        email TEXT NOT NULL UNIQUE,
        phone TEXT NOT NULL UNIQUE
    );
""")

cur.execute("""
    CREATE TABLE IF NOT EXISTS breed_of_dog (
        id_breed_of_dog INTEGER PRIMARY KEY,
        name_breed_of_dog TEXT NOT NULL UNIQUE
    )
""")

cur.execute("""
    CREATE TABLE IF NOT EXISTS dog (
        id_dog INTEGER PRIMARY KEY,
        id_dog_owner INTEGER NOT NULL,
        id_breed_of_dog INTEGER NOT NULL,
        name_dog TEXT NOT NULL,
        age_dog TEXT NOT NULL,
        FOREIGN KEY (id_dog_owner)
           REFERENCES dog_owner (id_dog_owner)
              ON DELETE CASCADE
              ON UPDATE NO ACTION,
        FOREIGN KEY (id_breed_of_dog)
           REFERENCES breed_of_dog (id_breed_of_dog)
              ON DELETE CASCADE
              ON UPDATE NO ACTION
    );
""")

cur.execute("""
    CREATE TABLE IF NOT EXISTS patient_appointment (
        id_patient_appointment INTEGER PRIMARY KEY,
        id_timetable INTEGER NOT NULL,
        id_dog INTEGER NOT NULL,
        time_date TEXT NOT NULL,
        FOREIGN KEY (id_timetable)
           REFERENCES timetable (id_timetable)
              ON DELETE CASCADE
              ON UPDATE NO ACTION,
        FOREIGN KEY (id_dog)
           REFERENCES dog (id_dog)
              ON DELETE CASCADE
              ON UPDATE NO ACTION
    );
""")


customers = [('1', 'Понедельник'),
             ('2', 'Вторник'),
             ('3', 'Среда'),
             ('4', 'Четверг'),
             ('5', 'Пятница'),
             ('6', 'Суббота'),
             ('7', 'Воскресенье')]

cur.executemany("INSERT INTO day VALUES(?, ?);", customers)

customers_spec = [
    ('1', 'Ветеринар Уролог'),
    ('2', 'Ветеринар Травматолог'),
    ('3', 'Ветеринар Стоматолог'),
    ('4', 'Ветеринар Онколог'),
    ('5', 'Ветеринар Диетолог'),
    ('6', 'Ветеринар Хирург'),
    ('7', 'Ветеринар Терапевт'),
    ('8', 'Ветеринар Невролог'),
    ('9', 'Ветеринар Гинеколог')]

cur.executemany("INSERT INTO specialization VALUES(?, ?);", customers_spec)

customers_breed = [
    ('1', 'Бобтейл'),
    ('2', 'Доберман'),
    ('3', 'Золотистый ретривер'),
    ('4', 'Лабрадор-ретривер'),
    ('5', 'Немейкая овчарка'),
    ('6', 'Немецкий боксер'),
    ('7', 'Ротвейлер'),
    ('8', 'Сенбернар'),
    ('9', 'Сибиский хаски'),
    ('10', 'Торньяк'),
    ('11', 'Аляскинский хаски'),
    ('12', 'Английский бульдог'),
    ('13', 'Английский кокер-спаниель'),
    ('14', 'Бигль'),
    ('15', 'Гончая Шиллера'),
    ('16', 'Далматин'),
    ('17', 'Древер'),
    ('18', 'Немецский пинчер'),
    ('19', 'Польская гончая'),
    ('20', 'Пули'),
    ('21', 'Болоньез'),
    ('22', 'Вельш-корги'),
    ('23', 'Джек-рассел-терьер'),
    ('24', 'Мопс'),
    ('25', 'Такса'),
    ('26', 'Тибетский спиниель'),
    ('27', 'Ши-тцу'),
    ('28', 'Шпиц малый'),
    ('29', 'Японский терьер'),
    ('30', 'Японский хин'),
    ('31', 'Австралийский терьер'),
    ('32', 'Английский той-терьер'),
    ('33', 'Йоркширский терьер'),
    ('34', 'Китайская хохлатая'),
    ('35', 'Пекинес'),
    ('36', 'Померанский шпиц'),
    ('37', 'Чихуахуа'),
    ('38', 'Брюссельский гриффон'),
    ('39', 'Бельгийский гриффон'),
    ('40', 'Мальтийская болонка')]

cur.executemany("INSERT INTO breed_of_dog VALUES(?, ?);", customers_breed)

customers_owner = [
    ('1', 'Александр', 'Парфенов', 'Дмитриевич', 'frezoiffeunniye-5035@noyp.fr.nf', '+7(762)445-95-58'),
    ('2', 'Варвара', 'Быкова', 'Михайловна', 'woinnoimmaquereu-1531@ab34.fr', '+7(507)199-11-01'),
    ('3', 'Лев', 'Фролов', 'Даниилович', 'voiffeileutoibro-9947@tokai.tk', '+7(650)011-45-90'),
    ('4', 'Яна', 'Фролова', 'Эмировна', 'gexeigrevelou-5890@o--b.tk', '+7(853)893-89-19'),
    ('5', 'Артём', 'Дмитриев', 'Тимурович', 'necreurappeidou-1109@zx81.ovh', '+7(198)204-56-97'),
    ('6', 'Матвей', 'Соколов', 'Андреевич', 'grollacatoikou-4281@noyp.fr.nf', '+7(560)627-55-05')]

cur.executemany("INSERT INTO dog_owner VALUES(?, ?, ?, ?, ?, ?);", customers_owner)

customers_doctor = [
    ('1', '7', 'Таисия', 'Тимофеева', 'Романовна'),
    ('2', '5', 'Камила', 'Новикова', 'Ильинична'),
    ('3', '6', 'Марсель', 'Осипов', 'Львович'),
    ('4', '2', 'Андрей', 'Петров', 'Дмитриевич')]

cur.executemany("INSERT INTO doctor VALUES(?, ?, ?, ?, ?);", customers_doctor)

customers_work_day = [
    ('1', '1', '1'),
    ('2', '1', '3'),
    ('3', '1', '5'),
    ('4', '2', '2'),
    ('5', '3', '2'),
    ('6', '3', '4'),
    ('7', '4', '1'),
    ('8', '4', '5')]

cur.executemany("INSERT INTO work_day VALUES(?, ?, ?);", customers_work_day)

customers_dog = [
    ('1', '1', '24', 'Фрайя', '9'),
    ('2', '2', '11', 'Абель', '11'),
    ('3', '3', '7', 'Алекс', '5'),
    ('4', '4', '16', 'Джес', '13'),
    ('5', '5', '24', 'Людвиг', '8'),
    ('6', '6', '27', 'Вольф', '1'),
    ('7', '2', '11', 'Багира', '2'),
    ('8', '4', '16', 'Мустанг', '14')]

cur.executemany("INSERT INTO dog VALUES(?, ?, ?, ?, ?);", customers_dog)

customers_timetable = [
    ('1', '1', '9:00', '14:00', '4.12.2023'),
    ('2', '2', '15:00', '18:00', '6.12.2023'),
    ('3', '3', '9:00', '14:00', '8.12.2023'),
    ('4', '4', '15:00', '18:00', '5.12.2023'),
    ('5', '5', '9:00', '14:00', '5.12.2023'),
    ('6', '6', '9:00', '14:00', '7.12.2023'),
    ('7', '7', '15:00', '18:00', '4.12.2023'),
    ('8', '8', '15:00', '18:00', '8.12.2023')]

cur.executemany("INSERT INTO timetable VALUES(?, ?, ?, ?, ?);", customers_timetable)

customers_patient = [
    ('1', '1', '1', '10:00'),
    ('2', '2', '1', '11:00'),
    ('3', '3', '2', '15:00'),
    ('4', '4', '4', '16:00'),
    ('5', '5', '6', '11:00'),
    ('6', '6', '8', '17:00'),
    ('7', '7', '4', '17:00'),
    ('8', '8', '7', '15:00')]

cur.executemany("INSERT INTO patient_appointment VALUES(?, ?, ?, ?);", customers_patient)